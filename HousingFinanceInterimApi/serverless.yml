service: housing-finance-interim-api
provider:
  name: aws
  timeout: 300
  runtime: dotnet8
  vpc: ${self:custom.vpc.${opt:stage}}
  stage: ${opt:stage}
  region: eu-west-2
  apiKeys:
    - secureAccess:
      - api-key-${self:service}-${self:provider.stage}
  usagePlan:
    - secureAccess:
        throttle:
          burstLimit: 200
          rateLimit: 100
  environment:
    CONNECTION_STRING: Data Source=${ssm:/housing-finance/${self:provider.stage}/db-host},${ssm:/housing-finance/${self:provider.stage}/db-port};Initial Catalog=${ssm:/housing-finance/${self:provider.stage}/db-database};Integrated Security=False;User Id=${ssm:/housing-finance/${self:provider.stage}/db-username};Password=${ssm:/housing-finance/${self:provider.stage}/db-password};Encrypt=False;TrustServerCertificate=False;MultipleActiveResultSets=True;
    GOOGLE_API_KEY: ${ssm:/housing-finance/${self:provider.stage}/google-application-credentials-json}
    WAIT_DURATION: ${ssm:/housing-finance/${self:provider.stage}/step-function-wait-duration}
    BATCH_SIZE: ${ssm:/housing-finance/${self:provider.stage}/bulk-insert-batch-size}
    CASH_FILE_REGEX: ${ssm:/housing-finance/${self:provider.stage}/cash-file-regex}
    HOUSING_FILE_REGEX: ${ssm:/housing-finance/${self:provider.stage}/housing-benefit-file-regex}
    ACCEPTED_ORIGINS: ${ssm:/housing-finance/${self:provider.stage}/cors-accepted-origins}
    CHARGES_BATCH_YEARS: ${ssm:/housing-finance/${self:provider.stage}/charges-batch-years}
    S3_BUCKET_NAME: ${ssm:/housing-finance/${self:provider.stage}/s3-bucket-name}
    S3_OBJECT_PREFIX: ${ssm:/housing-finance/${self:provider.stage}/s3-object-prefix}
    HOUSING_FINANCE_ALLOWED_GROUPS: ${ssm:/housing-finance/${self:provider.stage}/housing-finance-allowed-groups}

package:
  artifact: ./bin/release/net8.0/housing-finance-interim-api.zip

functions:
  interimFinanceSystem:
    name: ${self:service}-${self:provider.stage}
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.LambdaEntryPoint::FunctionHandlerAsync
    role: lambdaExecutionRole
    events:
      - http:
          path: /{proxy+}
          method: ANY
          authorizer:
            arn: ${self:custom.authorizerArns.${opt:stage}}
            type: request
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            managedExternally: true
          cors:
            origin: '*'
            headers:
              - Content-Type
              - If-Match
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - x-correlation-id
            allowCredentials: false
      - http:
          path: /swagger/{proxy+}
          method: GET
          private: false
  loadTenancyAgreement:
    name: ${self:service}-${self:provider.stage}-load-tenagree
    description: "The scheduler to update and add new tenancy agreements. Run at 12:00 AM"
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadTenancyAgreement
    role: lambdaExecutionRole
    events:
        - schedule: cron(0 0 * * ? *)
  checkCashFiles:
    name: ${self:service}-${self:provider.stage}-check-cash-files
    description: "The scheduler to check if exists cash files. "
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::CheckCashFiles
  importCashFile:
    name: ${self:service}-${self:provider.stage}-cash-file
    description: "The scheduler to import cash files from Google drives."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::ImportCashFile
    role: lambdaExecutionRole
  importCashFileTransactions:
    name: ${self:service}-${self:provider.stage}-cash-file-trans
    description: "The scheduler to import cash files transactions from Cash File table."
    timeout: 600
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadCashFileTransactions
    role: lambdaExecutionRole
  checkHousingFiles:
    name: ${self:service}-${self:provider.stage}-check-housing-files
    description: "The scheduler to check if exists housing benefit files. "
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::CheckHousingBenefitFiles
  importHousingFile:
    name: ${self:service}-${self:provider.stage}-housing-file
    description: "The scheduler to import housing files from Google drives."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::ImportHousingBenefitFile
    role: lambdaExecutionRole
  importHousingFileTransactions:
    name: ${self:service}-${self:provider.stage}-housing-file-trans
    description: "The scheduler to import housing files transactions from Housing File table."
    timeout: 600
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadHousingBenefitFileTransactions
    role: lambdaExecutionRole
  refreshCurrentBalance:
    name: ${self:service}-${self:provider.stage}-refresh-cur-bal
    description: "The scheduler to refresh current balance table."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::RefreshCurrentBalance
    role: lambdaExecutionRole
  refreshOperatingBalance:
    name: ${self:service}-${self:provider.stage}-refresh-op-bal
    description: "The scheduler to refresh operating balance table. Run at 06:45 AM"
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::RefreshOperatingBalance
    role: lambdaExecutionRole
    events:
        - schedule: cron(45 6 * * ? *)
  refreshManageArrearsTables:
    name: ${self:service}-${self:provider.stage}-refresh-ma-cur-bal
    description: "The scheduler to refresh manage arrears balance based on current balance table."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::RefreshManageArrears
    role: lambdaExecutionRole
  importDirectDebit:
    name: ${self:service}-${self:provider.stage}-direct-debit
    description: "The scheduler to import direct debit from Google Spreadshet."
    timeout: 600
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadDirectDebit
    role: lambdaExecutionRole
  importDirectDebitTransactions:
    name: ${self:service}-${self:provider.stage}-direct-debit-trans
    description: "The scheduler to import direct debit transactions from DirectDebit table."
    timeout: 600
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadDirectDebitTransactions
    role: lambdaExecutionRole
  importDirectDebitTransactionsOnDemand:
    name: ${self:service}-${self:provider.stage}-direct-debit-trans-dem
    description: "The scheduler to import direct debit transactions on demand from Google Spreadshet."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadDirectDebitTransactionsOnDemand
    role: lambdaExecutionRole
  checkChargesBatchYears:
    name: ${self:service}-${self:provider.stage}-check-years
    description: "The scheduler to check pending year to process charges. "
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::CheckChargesBatchYears
  importCharges:
    name: ${self:service}-${self:provider.stage}-charges
    description: "The scheduler to import charges from Google Spreadshet."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadCharges
    role: lambdaExecutionRole
  importChargesHistory:
    name: ${self:service}-${self:provider.stage}-charges-hist
    description: "The scheduler to import charges history."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadChargesHistory
    role: lambdaExecutionRole
  importChargesTransactions:
    name: ${self:service}-${self:provider.stage}-charges-trans
    description: "The scheduler to import charges transactions from Charges table."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadChargesTransactions
    role: lambdaExecutionRole
  importChargesTransactionsOnDemand:
    name: ${self:service}-${self:provider.stage}-charges-trans-dem
    description: "The scheduler to import charges transactions on demand from Google Spreadshet."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadChargesTransactionsOnDemand
    role: lambdaExecutionRole
  loadActionDiary:
    name: ${self:service}-${self:provider.stage}-action-diary
    description: "The scheduler to load action diary spreadsheet. Run at 03:00 AM"
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadActionDiary
    role: lambdaExecutionRole
    events:
        - schedule: cron(0 3 * * ? *)
  generateRentPosition:
    name: ${self:service}-${self:provider.stage}-rent-position
    description: "The scheduler to generate rent position csv file. Run at 05:00 AM"
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::GenerateRentPosition
    role: lambdaExecutionRole
    events:
        - schedule: cron(0 5 * * ? *)
  importAdjustmentsTransactions:
    name: ${self:service}-${self:provider.stage}-adjustments-trans
    description: "The scheduler to import adjustments transactions from spreadsheet. Runs at 2:45 AM."
    timeout: 600
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadAdjustmentsTransactions
    role: lambdaExecutionRole
    events:
        - schedule: cron(45 2 * * ? *)
  suspenseCash:
    name: ${self:service}-${self:provider.stage}-susp-cash
    description: "The scheduler to load and reverse suspense cash files. Run at 03:05 AM"
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadSuspenseCashTransactions
    role: lambdaExecutionRole
    events:
        - schedule: cron(5 3 * * ? *)
  suspenseHousingBenefit:
    name: ${self:service}-${self:provider.stage}-susp-hb
    description: "The scheduler to load and reverse suspense hb files. Run at 03:10 AM"
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::LoadSuspenseHousingBenefitTransactions
    role: lambdaExecutionRole
    events:
        - schedule: cron(10 3 * * ? *)
  generateReport:
    name: ${self:service}-${self:provider.stage}-gen-report
    description: "The scheduler to generate google drive reports."
    timeout: 900
    handler: HousingFinanceInterimApi::HousingFinanceInterimApi.Handler::GenerateReport
    role: lambdaExecutionRole
stepFunctions:
  stateMachines:
    hfstepfunccashfile:
      name: HFCashFileStateMachine
      events:
        - schedule: cron(0 2 * * ? *)
      definition:
        Comment: "Cash files process step function deployed via serverless. Run at 02:00 AM"
        StartAt: ImportCashFile
        States:
          ImportCashFile:
            Type: Task
            Resource:
              Fn::GetAtt: [ importCashFile, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: Wait_2
          Wait_2:
            Type: Wait
            TimestampPath: $.NextStepTime
            Next: ImportCashFileTransactions
          ImportCashFileTransactions:
            Type: Task
            Resource:
              Fn::GetAtt: [ importCashFileTransactions, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: EndStep
          EndStep:
            Type: Succeed
      dependsOn: lambdaExecutionRole
      tags:
        Team: HousingFinance
    hfstepfunchousingfile:
      name: HFHousingFileStateMachine
      events:
        - schedule: cron(0 6 ? * MON *)
      definition:
        Comment: "Housing files process step function deployed via serverless. Run at 06:00 AM only Monday"
        StartAt: CheckHousingFiles
        States:
          CheckHousingFiles:
            Type: Task
            Resource:
              Fn::GetAtt: [ checkHousingFiles, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: Wait_1
          Wait_1:
              Type: Wait
              TimestampPath: $.NextStepTime
              Next: ImportHousingFile
          ImportHousingFile:
            Type: Task
            Resource:
              Fn::GetAtt: [ importHousingFile, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: Wait_2
          Wait_2:
            Type: Wait
            TimestampPath: $.NextStepTime
            Next: ImportHousingFileTransactions
          ImportHousingFileTransactions:
            Type: Task
            Resource:
              Fn::GetAtt: [ importHousingFileTransactions, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: EndStep
          EndStep:
            Type: Succeed
      dependsOn: lambdaExecutionRole
      tags:
        Team: HousingFinance
    hfstepfuncdirectdebit:
      name: HFDirectDebitStateMachine
      events:
        - schedule: cron(30 2 * * ? *)
      definition:
        Comment: "Direct debit process step function deployed via serverless. Run at 02:30 AM"
        StartAt: ImportDirectDebit
        States:
          ImportDirectDebit:
            Type: Task
            Resource:
              Fn::GetAtt: [ importDirectDebit, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: Wait_1
          Wait_1:
              Type: Wait
              TimestampPath: $.NextStepTime
              Next: Choice_1
          Choice_1:
            Type: Choice
            Choices:
              - Variable: $.Continue
                BooleanEquals: true
                Next: ImportDirectDebitTransactions
              - Variable: $.Continue
                BooleanEquals: false
                Next: EndStep
          ImportDirectDebitTransactions:
            Type: Task
            Resource:
              Fn::GetAtt: [ importDirectDebitTransactions, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: EndStep
          EndStep:
            Type: Succeed
      dependsOn: lambdaExecutionRole
      tags:
        Team: HousingFinance
    # hfstepfunccharges:
    #   name: HFChargesStateMachine
    #   events:
    #     - schedule: cron(30 0 * * ? *)
    #   definition:
    #     Comment: "Charges process step function deployed via serverless. Run at 12:30 AM"
    #     StartAt: CheckChargesBatchYears
    #     States:
    #       CheckChargesBatchYears:
    #         Type: Task
    #         Resource:
    #           Fn::GetAtt: [ checkChargesBatchYears, Arn ]
    #         Retry:
    #           - ErrorEquals:
    #               - States.All
    #             IntervalSeconds: 30
    #             MaxAttempts: 3
    #             BackoffRate: 2
    #         Next: Choice_ExistPendingYear
    #       Choice_ExistPendingYear:
    #         Type: Choice
    #         Choices:
    #           - Variable: $.Continue
    #             BooleanEquals: true
    #             Next: Wait_0
    #           - Variable: $.Continue
    #             BooleanEquals: false
    #             Next: EndStep
    #       Wait_0:
    #           Type: Wait
    #           TimestampPath: $.NextStepTime
    #           Next: ImportCharges
    #       ImportCharges:
    #         Type: Task
    #         Resource:
    #           Fn::GetAtt: [ importCharges, Arn ]
    #         Retry:
    #           - ErrorEquals:
    #               - States.All
    #             IntervalSeconds: 30
    #             MaxAttempts: 3
    #             BackoffRate: 2
    #         Next: Wait_1
    #       Wait_1:
    #           Type: Wait
    #           TimestampPath: $.NextStepTime
    #           Next: ImportChargesHistory
    #       ImportChargesHistory:
    #         Type: Task
    #         Resource:
    #           Fn::GetAtt: [ importChargesHistory, Arn ]
    #         Retry:
    #           - ErrorEquals:
    #               - States.All
    #             IntervalSeconds: 30
    #             MaxAttempts: 3
    #             BackoffRate: 2
    #         Next: Wait_2
    #       Wait_2:
    #           Type: Wait
    #           TimestampPath: $.NextStepTime
    #           Next: ImportChargesTransactions
    #       ImportChargesTransactions:
    #         Type: Task
    #         Resource:
    #           Fn::GetAtt: [ importChargesTransactions, Arn ]
    #         Retry:
    #           - ErrorEquals:
    #               - States.All
    #             IntervalSeconds: 30
    #             MaxAttempts: 3
    #             BackoffRate: 2
    #         Next: CheckChargesBatchYears
    #       EndStep:
    #         Type: Succeed
    #   dependsOn: lambdaExecutionRole
    #   tags:
    #     Team: HousingFinance
    hfstepfunccurentbalance:
      name: HFCurrentBalanceStateMachine
      events:
        - schedule: cron(10 6 * * ? *)
      definition:
        Comment: "Current balance process step function deployed via serverless. Run at 06:10 AM"
        StartAt: RefreshCurrentBalance
        States:
          RefreshCurrentBalance:
            Type: Task
            Resource:
              Fn::GetAtt: [ refreshCurrentBalance, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: Wait_1
          Wait_1:
            Type: Wait
            TimestampPath: $.NextStepTime
            Next: RefreshManageArrears
          RefreshManageArrears:
            Type: Task
            Resource:
              Fn::GetAtt: [ refreshManageArrearsTables, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: EndStep
          EndStep:
            Type: Succeed
      dependsOn: lambdaExecutionRole
      tags:
        Team: HousingFinance
    hfstepfuncreport:
      name: HFReportsStateMachine
      events:
        - schedule: cron(0/30 * * * ? *)
      definition:
        Comment: "Reports step function deployed via serverless. Run every 30 min"
        StartAt: GenerateReport
        States:
          GenerateReport:
            Type: Task
            Resource:
              Fn::GetAtt: [ generateReport, Arn ]
            Retry:
              - ErrorEquals:
                  - States.All
                IntervalSeconds: 30
                MaxAttempts: 3
                BackoffRate: 2
            Next: Choice_ExistPendingReport
          Choice_ExistPendingReport:
            Type: Choice
            Choices:
              - Variable: $.Continue
                BooleanEquals: true
                Next: Wait_0
              - Variable: $.Continue
                BooleanEquals: false
                Next: EndStep
          Wait_0:
              Type: Wait
              TimestampPath: $.NextStepTime
              Next: GenerateReport
          EndStep:
            Type: Succeed
      dependsOn: lambdaExecutionRole
      tags:
        Team: HousingFinance
resources:
  Resources:
    lambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /${self:service}/${self:provider.stage}/
        RoleName: ${self:service}-lambdaExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: manageLogs
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
                - Effect: "Allow"
                  Action:
                    - "s3:PutObject"
                    - "s3:GetObject"
                  Resource:
                    Fn::Join:
                      - ""
                      - - "arn:aws:s3:::"
                        - "Ref": "ServerlessDeploymentBucket"
          - PolicyName: lambdaInvocation
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"
    LoadTenancyAgreementLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-load-tenagree-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Load Tenancy Agreement (load-tenagree) function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
              - ':'
              - - 'arn:aws:sns'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-load-tenagree
    LoadSuspenseCashTransactionsLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-susp-cash-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Load Suspense Cash (susp-cash) function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
              - ':'
              - - 'arn:aws:sns'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-susp-cash
    CashFileLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-cash-file-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for CashFile function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-cash-file
    RentPositionLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-rent-position-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Rent Position function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-rent-position
    LoadActionDiaryLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-action-diary-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Load Action Diary function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-action-diary
    HousingFileLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-check-housing-files-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Check Housing File function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-check-housing-files
    SuspenseHousingBenefitLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-susp-hb-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Suspense Housing Benefit (susp-hb) function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
              - ':'
              - - 'arn:aws:sns'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-susp-hb
    ImportCashFileTransactionsAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-cash-file-trans-alarm"
        AlarmDescription: Errors detected in AWS Lambda for CashFileTransactions function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-cash-file-trans
    ImportDirectDebitAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-direct-debit-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Import Direct Debit function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-direct-debit
    OperatingBalanceLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-refresh-op-bal-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Refresh Operating Balance function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-refresh-op-bal
    HousingFileTransactionsLambdaAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-file-trans-lambda-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Import Housing Files Transactions function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-housing-file-trans
    ImportDirectDebitTransactionsAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-direct-debit-trans-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Import Direct Debit Transactions function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-direct-debit-trans
    RefreshCurrentBalanceAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-refresh-cur-bal-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Refresh Current Balance function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-refresh-cur-bal
    RefreshManageArrearsTablesAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: "${self:provider.stage}-housing-finance-refresh-ma-cur-bal-alarm"
        AlarmDescription: Errors detected in AWS Lambda for Refresh Manage Arrears Tables function
        Namespace: AWS/Lambda
        MetricName: "Errors"
        Statistic: Sum
        Threshold: 0
        ComparisonOperator: GreaterThanThreshold
        EvaluationPeriods: 1
        Period: 60
        TreatMissingData: notBreaching
        AlarmActions:
          - 'Fn::Join':
            - ':'
            - - 'arn:aws:sns'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - 'housing-finance-alarms'
        Dimensions:
          - Name: FunctionName
            Value: ${self:service}-${self:provider.stage}-refresh-ma-cur-bal

custom:
  authorizerArns:
    development: arn:aws:lambda:eu-west-2:859159924354:function:api-auth-verify-token-new-development-apiauthverifytokennew
    staging:     arn:aws:lambda:eu-west-2:715003523189:function:api-auth-verify-token-new-staging-apiauthverifytokennew
    production:  arn:aws:lambda:eu-west-2:153306643385:function:api-auth-verify-token-new-production-apiauthverifytokennew
  associateWaf:
    name: Platform_APIs_Web_ACL
    version: V2
  vpc:
    development:
      securityGroupIds:
        - sg-00d2e14f38245dd0b
      subnetIds:
        - subnet-0140d06fb84fdb547
        - subnet-05ce390ba88c42bfd
    staging:
      securityGroupIds:
        - sg-00c197e980177983d
      subnetIds:
        - subnet-0743d86e9b362fa38
        - subnet-0ea0020a44b98a2ca
    production:
      securityGroupIds:
        - sg-02a377899622e884c
      subnetIds:
        - subnet-0beb266003a56ca82
        - subnet-06a697d86a9b6ed01

plugins:
  - serverless-step-functions
  - serverless-associate-waf
